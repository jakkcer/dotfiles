# resize window
[[plugins]]
repo = 'simeji/winresizer'
on_event = ['WinNew']
hook_source = '''
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

# html tag completion
# [[plugins]]
# repo = 'alvan/vim-closetag'
# on_ft = ['html', 'javascript', 'typescript.tsx']
# hook_source = '''
# let g:closetag_filenames = '*.html,*.jsx,*.js,*.tsx'
# let g:closetag_xhtml_filenames = '*.jsx,*.js,*.tsx'
# '''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'javascript', 'typescript', 'css']

# js setting
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['html', 'javascript']

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript', 'typescript']

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']
hook_source = '''
let g:used_javascript_libs = 'jquery,react'
let b:javascript_lib_use_jquery = 1
let b:javascript_lib_use_react = 1
'''

# js autocompletion
[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript']
build = 'npm install'

# ts setting
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

# html highlight
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# css highlight
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['html', 'css', 'javascript']

# latex setting
[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
let g:tex_flavor = 'latex'
let g:vimtex_compiler_latexmk = {
  \ 'background': 1,
  \ 'build_dir': '',
  \ 'continuous': 1,
  \ 'options': [
  \    '-pdfdvi', 
  \    '-verbose',
  \    '-file-line-error',
  \    '-synctex=1',
  \    '-interaction=nonstopmode',
  \ ],
\ }
let g:vimtex_view_general_viewer
  \ = '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'

" mappings: remap all default mappings with <localeader>l
nnoremap [vimtex] <Nop>
nmap <Leader>t [vimtex]

nmap <silent><buffer><nowait> [vimtex]i <plug>(vimtex-info)
nmap <silent><buffer><nowait> [vimtex]I <plug>(vimtex-info-full)
nmap <silent><buffer><nowait> [vimtex]t <plug>(vimtex-toc-open)
nmap <silent><buffer><nowait> [vimtex]T <plug>(vimtex-toc-toggle)
nmap <silent><buffer><nowait> [vimtex]q <plug>(vimtex-log)
nmap <silent><buffer><nowait> [vimtex]v <plug>(vimtex-view)
nmap <silent><buffer><nowait> [vimtex]r <plug>(vimtex-reverse-search)
nmap <silent><buffer><nowait> [vimtex]l <plug>(vimtex-compile)
xmap <silent><buffer><nowait> [vimtex]L <plug>(vimtex-compile-selected)
nmap <silent><buffer><nowait> [vimtex]k <plug>(vimtex-stop)
nmap <silent><buffer><nowait> [vimtex]K <plug>(vimtex-stop-all)
nmap <silent><buffer><nowait> [vimtex]e <plug>(vimtex-errors)
nmap <silent><buffer><nowait> [vimtex]o <plug>(vimtex-compile-output)
nmap <silent><buffer><nowait> [vimtex]g <plug>(vimtex-status)
nmap <silent><buffer><nowait> [vimtex]G <plug>(vimtex-status-all)
nmap <silent><buffer><nowait> [vimtex]c <plug>(vimtex-clean)
nmap <silent><buffer><nowait> [vimtex]C <plug>(vimtex-clean-full)
nmap <silent><buffer><nowait> [vimtex]m <plug>(vimtex-imaps-list)
nmap <silent><buffer><nowait> [vimtex]x <plug>(vimtex-reload)
nmap <silent><buffer><nowait> [vimtex]X <plug>(vimtex-reload-state)
nmap <silent><buffer><nowait> [vimtex]s <plug>(vimtex-toggle-main)

augroup VimtexSetting
  autocmd!
  autocmd BufReadPre *.tex let b:vimtex_main = 'main.tex'
augroup END
'''

# golang setting
[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = ['go']
